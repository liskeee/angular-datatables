{"version":3,"file":"angular-datatables.mjs","sources":["../../../lib/src/angular-datatables.directive.ts","../../../lib/src/angular-datatables.module.ts","../../../lib/public_api.ts","../../../lib/index.ts","../../../lib/angular-datatables.ts"],"sourcesContent":["/**\r\n * @license\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\r\n */\r\n\r\nimport { Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2, ViewContainerRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ADTSettings, ADTColumns } from './models/settings';\r\nimport { Api } from 'datatables.net';\r\n\r\n@Directive({\r\n  selector: '[datatable]'\r\n})\r\nexport class DataTableDirective implements OnDestroy, OnInit {\r\n  /**\r\n   * The DataTable option you pass to configure your table.\r\n   */\r\n  @Input()\r\n  dtOptions: ADTSettings = {};\r\n\r\n  /**\r\n   * This trigger is used if one wants to trigger manually the DT rendering\r\n   * Useful when rendering angular rendered DOM\r\n   */\r\n  @Input()\r\n  dtTrigger!: Subject<ADTSettings>;\r\n\r\n  /**\r\n   * The DataTable instance built by the jQuery library [DataTables](datatables.net).\r\n   *\r\n   * It's possible to execute the [DataTables APIs](https://datatables.net/reference/api/) with\r\n   * this variable.\r\n   */\r\n  dtInstance!: Promise<Api>;\r\n\r\n  // Only used for destroying the table when destroying this directive\r\n  private dt!: Api;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private vcr: ViewContainerRef,\r\n    private renderer: Renderer2\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.dtTrigger) {\r\n      this.dtTrigger.subscribe((options) => {\r\n        this.displayTable(options);\r\n      });\r\n    } else {\r\n      this.displayTable(null);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.dtTrigger) {\r\n      this.dtTrigger.unsubscribe();\r\n    }\r\n    if (this.dt) {\r\n      this.dt.destroy(true);\r\n    }\r\n  }\r\n\r\n  private displayTable(dtOptions: ADTSettings | null): void {\r\n    // assign new options if provided\r\n    if (dtOptions) {\r\n      this.dtOptions = dtOptions;\r\n    }\r\n    this.dtInstance = new Promise((resolve, reject) => {\r\n      Promise.resolve(this.dtOptions).then(resolvedDTOptions => {\r\n        // validate object\r\n        const isTableEmpty = Object.keys(resolvedDTOptions).length === 0 && $('tbody tr', this.el.nativeElement).length === 0;\r\n        if (isTableEmpty) {\r\n          reject('Both the table and dtOptions cannot be empty');\r\n          return;\r\n        }\r\n\r\n        // Set a column unique\r\n        if (resolvedDTOptions.columns) {\r\n          resolvedDTOptions.columns.forEach(col => {\r\n            if ((col.id ?? '').trim() === '') {\r\n              col.id = this.getColumnUniqueId();\r\n            }\r\n          });\r\n        }\r\n\r\n        // Using setTimeout as a \"hack\" to be \"part\" of NgZone\r\n        setTimeout(() => {\r\n          // Assign DT properties here\r\n          let options: ADTSettings = {\r\n            rowCallback: (row, data, index) => {\r\n              if (resolvedDTOptions.columns) {\r\n                const columns = resolvedDTOptions.columns;\r\n                this.applyNgPipeTransform(row, columns);\r\n                this.applyNgRefTemplate(row, columns, data);\r\n              }\r\n\r\n              // run user specified row callback if provided.\r\n              if (resolvedDTOptions.rowCallback) {\r\n                resolvedDTOptions.rowCallback(row, data, index);\r\n              }\r\n            }\r\n          };\r\n          // merge user's config with ours\r\n          options = Object.assign({}, resolvedDTOptions, options);\r\n          this.dt = $(this.el.nativeElement).DataTable(options);\r\n          resolve(this.dt);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private applyNgPipeTransform(row: Node, columns: ADTColumns[]): void {\r\n    // Filter columns with pipe declared\r\n    const colsWithPipe = columns.filter(x => x.ngPipeInstance && !x.ngTemplateRef);\r\n    colsWithPipe.forEach(el => {\r\n      const pipe = el.ngPipeInstance!;\r\n      const pipeArgs = el.ngPipeArgs || [];\r\n      // find index of column using `data` attr\r\n      const i = columns.filter(c => c.visible !== false).findIndex(e => e.id === el.id);\r\n      // get <td> element which holds data using index\r\n      const rowFromCol = row.childNodes.item(i);\r\n      // Transform data with Pipe and PipeArgs\r\n      const rowVal = $(rowFromCol).text();\r\n      const rowValAfter = pipe.transform(rowVal, ...pipeArgs);\r\n      // Apply transformed string to <td>\r\n      $(rowFromCol).text(rowValAfter);\r\n    });\r\n  }\r\n\r\n  private applyNgRefTemplate(row: Node, columns: ADTColumns[], data: Object): void {\r\n    // Filter columns using `ngTemplateRef`\r\n    const colsWithTemplate = columns.filter(x => x.ngTemplateRef && !x.ngPipeInstance);\r\n    colsWithTemplate.forEach(el => {\r\n      const { ref, context } = el.ngTemplateRef!;\r\n      // get <td> element which holds data using index\r\n      const i = columns.filter(c => c.visible !== false).findIndex(e => e.id === el.id);\r\n      const cellFromIndex = row.childNodes.item(i);\r\n      // reset cell before applying transform\r\n      $(cellFromIndex).html('');\r\n      // render onto DOM\r\n      // finalize context to be sent to user\r\n      const _context = Object.assign({}, context, context?.userData, {\r\n        adtData: data\r\n      });\r\n      const instance = this.vcr.createEmbeddedView(ref, _context);\r\n      this.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\r\n    });\r\n  }\r\n\r\n  private getColumnUniqueId(): string {\r\n    let result = '';\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      const randomIndex = Math.floor(Math.random() * characters.length);\r\n      result += characters.charAt(randomIndex);\r\n    }\r\n\r\n    return result.trim();\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTableDirective } from './angular-datatables.directive';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule ],\r\n  declarations: [ DataTableDirective ],\r\n  exports: [ DataTableDirective ]\r\n})\r\nexport class DataTablesModule {}\r\n","/**\r\n * @license\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\r\n */\r\n\r\n/**\r\n * @module\r\n * @description\r\n * Entry point from which you should import all public library APIs.\r\n */\r\nexport { DataTableDirective } from './src/angular-datatables.directive';\r\nexport { DataTablesModule } from './src/angular-datatables.module';\r\n","/**\r\n * @license\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\r\n */\r\n\r\nexport * from './public_api';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}